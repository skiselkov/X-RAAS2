#!/bin/sh

# CDDL HEADER START
#
# This file and its contents are supplied under the terms of the
# Common Development and Distribution License ("CDDL"), version 1.0.
# You may only use this file in accordance with the terms of version
# 1.0 of the CDDL.
#
# A full copy of the text of the CDDL should have accompanied this
# source.  A copy of the CDDL is also available via the Internet at
# http://www.illumos.org/license/CDDL.
#
# CDDL HEADER END

# Copyright 2016 Saso Kiselkov. All rights reserved.

# Invoke this script to build X-RAAS2 for both Windows and Linux,
# 32- & 64-bit flavors. Install the necessary mingw cross-compile utilities
# first.
# On Linux also do "apt install libopenal-dev:x86_64 libopenal-dev:i386".

embed=no
acf_type=0
while getopts "et:" opt; do
	case "$opt" in
	e)
		embed=yes
		;;
	t)
		acf_type="$OPTARG"
		;;
	*)
		echo "Bad option $opt. Use ./build_release to build X-RAAS2" >&2
		exit 1
		;;
	esac
done

# Locate libacfutils and build it if necessary
LIBACFUTILS="$(qmake -query LIBACFUTILS)"

if [ "$LIBACFUTILS" = "**Unknown**" ]; then
	echo "Please use \"qmake -set LIBACFUTILS <<path>>\" to " \
	    "point to where you have libacfutils unpacked." >&2
	exit 1
fi

if ! [ -f "$LIBACFUTILS/qmake/win32/libacfutils.a" ] ||
    ! [ -f "$LIBACFUTILS/qmake/win64/libacfutils.a" ] ||
    ! [ -f "$LIBACFUTILS/qmake/lin32/libacfutils.a" ] ||
    ! [ -f "$LIBACFUTILS/qmake/lin64/libacfutils.a" ]; then
	if ! ( cd "$LIBACFUTILS/qmake" && ./build-win-lin ) ; then
		exit 1
	fi
fi

# We'll try to build on N+1 CPUs we have available. The extra +1 is to allow
# for one make instance to be blocking on disk.
NCPUS=$(( $(grep 'processor[[:space:]]\+:' /proc/cpuinfo  | wc -l) + 1 ))

rm -rf debug output

make distclean > /dev/null
mkdir -p output/64
qmake -set CROSS_COMPILE x86_64-w64-mingw32- && \
    qmake -set XRAAS_EMBED $embed && \
    qmake -set ACF_TYPE "$acf_type" && \
    qmake -spec win32-g++ && \
    make -j $NCPUS && \
    mv debug/win.xpl1.dll output/64/win.xpl
if [ $? != 0 ] ; then
  exit
fi

if [ "$acf_type" -neq 1 ]; then
	# The FlightFactor A320 currently only supports Windows, so don't
	# even bother building any other version of the plugin. On Windows
	# only the 64-bit version ships, so don't even build the 32-bit one.

	make distclean > /dev/null
	mkdir -p output/32
	qmake -set CROSS_COMPILE i686-w64-mingw32- && \
	    qmake -set XRAAS_EMBED $embed && \
	    qmake -set ACF_TYPE "$acf_type" && \
	    qmake -spec win32-g++ && \
	    make -j $NCPUS && \
	    mv debug/win.xpl1.dll output/32/win.xpl
	if [ $? != 0 ] ; then
	  exit
	fi

	make distclean > /dev/null
	mkdir -p output/64
	qmake -set XRAAS_EMBED $embed && \
	    qmake -set ACF_TYPE "$acf_type" && \
	    qmake -spec linux-g++-64 && \
	    make -j $NCPUS && \
	    mv liblin.xpl.so output/64/lin.xpl
	if [ $? != 0 ] ; then
	  exit
	fi

	make distclean > /dev/null
	mkdir -p output/32
	qmake -set XRAAS_EMBED $embed && \
	    qmake -set ACF_TYPE "$acf_type" && \
	    qmake -spec linux-g++-32 && \
	    make -j $NCPUS && \
	    mv liblin.xpl.so output/32/lin.xpl
	if [ $? != 0 ] ; then
	  exit
	fi
fi
