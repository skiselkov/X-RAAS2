#!/bin/bash

# CDDL HEADER START
#
# This file and its contents are supplied under the terms of the
# Common Development and Distribution License ("CDDL"), version 1.0.
# You may only use this file in accordance with the terms of version
# 1.0 of the CDDL.
#
# A full copy of the text of the CDDL should have accompanied this
# source.  A copy of the CDDL is also available via the Internet at
# http://www.illumos.org/license/CDDL.
#
# CDDL HEADER END

# Copyright 2016 Saso Kiselkov. All rights reserved.

######################################
#
# MASTER X-RAAS BUILD SCRIPT
#
# This is the master X-RAAS build script. Run this to fire off a release
# build on your platform. We currently support the following build platforms:
#
#	*) Ubuntu 16.04 LTS (or later): this builds the Linux and Windows
#	   32 & 64-bit flavors. Refer to qmake/build-win-lin for details of
#	   the required build packages.
#	*) Mac OS 10.9.5 (or later): this builds the Mac OS 32 & 64-bit
#	   flavors. Refer to qmake/build-mac for details.
#
# In each case, you'll want to have your basic build environment working
# (i.e. build packages installed on Linux, Xcode on Mac).
#
# The build process proceeds in three steps:
#
#	1) Build all included dependencies for all target platforms. ATM this
#	   is just FreeType. We build a static, stand-alone, symbol-hidden
#	   version of the library. We don't want to export any of its symbols
#	   outside the plugin.
#	2) Build the plugin itself for all target platforms using qmake.
#	3) Assemble the final 'X-RAAS2' plugin package. The output package
#	   will be located in this top-level directory in a form that is
#	   ready for zipping for distribution and installation into X-Plane.
#
######################################

DIST_FILES=(
    COPYING
    README.md
    api/COPYING
    api/python/XRAAS_ND_msg_decode.py
    api/python/test_sample.py
    api/python/.gitignore
    api/lua/test_sample.lua
    api/lua/XRAAS_ND_msg_decode.lua
    api/c/XRAAS_ND_msg_decode.h
    api/c/XRAAS_ND_msg_decode.c
    api/c/test_sample.c
    docs/manual.pdf
    data/fonts/Aileron/Aileron-Regular.otf
    data/fonts/ShareTechMono/OFL.txt
    data/fonts/ShareTechMono/ShareTechMono-Regular.ttf
    data/msgs/female/0.wav
    data/msgs/female/1.wav
    data/msgs/female/2.wav
    data/msgs/female/3.wav
    data/msgs/female/30.wav
    data/msgs/female/4.wav
    data/msgs/female/5.wav
    data/msgs/female/6.wav
    data/msgs/female/7.wav
    data/msgs/female/8.wav
    data/msgs/female/9.wav
    data/msgs/female/alt_set.wav
    data/msgs/female/apch.wav
    data/msgs/female/avail.wav
    data/msgs/female/caution.wav
    data/msgs/female/center.wav
    data/msgs/female/deep_land.wav
    data/msgs/female/feet.wav
    data/msgs/female/flaps.wav
    data/msgs/female/hundred.wav
    data/msgs/female/left.wav
    data/msgs/female/long_land.wav
    data/msgs/female/meters.wav
    data/msgs/female/on_rwy.wav
    data/msgs/female/on_twy.wav
    data/msgs/female/pause.wav
    data/msgs/female/right.wav
    data/msgs/female/rmng.wav
    data/msgs/female/rwys.wav
    data/msgs/female/short_rwy.wav
    data/msgs/female/thousand.wav
    data/msgs/female/too_fast.wav
    data/msgs/female/too_high.wav
    data/msgs/female/twy.wav
    data/msgs/female/unstable.wav
    data/msgs/male/0.wav
    data/msgs/male/1.wav
    data/msgs/male/2.wav
    data/msgs/male/3.wav
    data/msgs/male/30.wav
    data/msgs/male/4.wav
    data/msgs/male/5.wav
    data/msgs/male/6.wav
    data/msgs/male/7.wav
    data/msgs/male/8.wav
    data/msgs/male/9.wav
    data/msgs/male/alt_set.wav
    data/msgs/male/apch.wav
    data/msgs/male/avail.wav
    data/msgs/male/caution.wav
    data/msgs/male/center.wav
    data/msgs/male/deep_land.wav
    data/msgs/male/feet.wav
    data/msgs/male/flaps.wav
    data/msgs/male/hundred.wav
    data/msgs/male/left.wav
    data/msgs/male/long_land.wav
    data/msgs/male/meters.wav
    data/msgs/male/on_rwy.wav
    data/msgs/male/on_twy.wav
    data/msgs/male/pause.wav
    data/msgs/male/right.wav
    data/msgs/male/rmng.wav
    data/msgs/male/rwys.wav
    data/msgs/male/short_rwy.wav
    data/msgs/male/thousand.wav
    data/msgs/male/too_fast.wav
    data/msgs/male/too_high.wav
    data/msgs/male/twy.wav
    data/msgs/male/unstable.wav
)

function install_file() {
	FILE="$1"
	DST="$2/$(dirname "$FILE")"

	mkdir -p "$DST"
	cp "$FILE" "$DST"
}

function install_xtra_files() {
	for (( I=0; $I < ${#DIST_FILES[@]}; I=$I + 1 )); do
		install_file "${DIST_FILES[$I]}" "X-RAAS2"
	done
}

embed=''

while getopts "eh" opt; do
	case "$opt" in
	e)
		embed="-e"
		;;
	h)
		cat << EOF
Usage: $0 [-eh]
Options:
  -e : Build an embeddable version of X-RAAS. Embeddable versions auto-inhibit
       when a globally installed version of X-RAAS is detected to prevent
       duplicated annunciations. Embeddable versions also relocate their config
       files and data cache so that they don't interfere with a global version.
  -h : Show this help screen.
EOF
		exit
		;;
	*)
		echo "Unknown option $opt. Try -h for help." >&2
		exit 1
		;;
	esac
done

if ! ./build_freetype_deps; then
	echo "FreeType build failed" >&2
	exit 1
fi

rm -rf X-RAAS2

case `uname` in
Linux)
	( cd qmake && ./build-win-lin $embed ) && mkdir -p X-RAAS2/64 && \
	    cp qmake/output/{win,lin}.xpl X-RAAS2 && \
	    cp qmake/output/64/{win,lin}.xpl X-RAAS2/64 && \
	    install_xtra_files
	;;
Darwin)
	( cd qmake && ./build-mac $embed ) && mkdir -p X-RAAS2/64 && \
	    cp qmake/output/mac.xpl X-RAAS2 && \
	    cp qmake/output/64/mac.xpl X-RAAS2/64 && \
	    install_xtra_files
	;;
*)
	echo "Unsupported platform" >&2
	exit 1
	;;
esac
